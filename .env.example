# Django settings

SECRET_KEY= Generate your key here https://djecrety.ir/ or you can use django.core.management.utils.get_random_secret_key
DEBUG= True or False
ALLOWED_HOSTS= list of allowed hosts, separated by space -- "example.com another.example.com"
CSRF_TRUSTED_ORIGINS= list of domains that can send CSRF tokens in requests, separated by space -- "https://example.com https://another.example.com"


# Database setting

DB_NAME=  # Database name  (use 'drive' for running via docker-compose)
DB_USER=  # Username  (use 'drive' for running via docker-compose)
DB_PASSWORD=  # Password  (use 'drive' for running via docker-compose)
DB_HOST=  # Host ('localhost' for local development or 'db' for running via docker-compose)
DB_PORT=  # Port (5432)


# Minio settings

MINIO_ROOT_USER=  # MinIO console username
MINIO_ROOT_PASSWORD=  # MinIO console password

AWS_STORAGE_BUCKET_NAME=  # Bucket name, "drive" for example
AWS_ACCESS_KEY_ID=  # Read point 10 in README.MD
AWS_SECRET_ACCESS_KEY=  # Read point 10 in README.MD
AWS_S3_ENDPOINT_URL=  # http://localhost:9000 for local development or http://minio:9000 for running via docker-compose


# Telegram Settings

TELEGRAM_BOT_TOKEN=  # Your bot token
TELEGRAM_SECRET_KEY=  # Secret key with which we will check requests from Telegram. You can generate it on the website https://randomkeygen.com/ in the CodeIgniter Encryption Keys section
BOT_USERNAME=  # Your bot username


# Other settings
PROJECT_URL=  # Domain with the scheme where the telegram webhook will be installed (https://example.com). p.s. https only, but you can use ngrok for example
GRPC_API_ADDRESS= Address for GRPC requests
FLOWER_USER_LOGIN= Login for celery-flower
FLOWER_USER_PASSWORD= Password for celery-flower
CELERY_BROKER_URL= Broker URL, use 'redis://redis:6379/0' for running via docker-compose