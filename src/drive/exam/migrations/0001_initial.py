# Generated by Django 4.2.6 on 2023-10-26 14:27

import django.db.models.deletion
from django.db import migrations, models

import drive.utils.fields.json


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("bot", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "answer",
                    drive.utils.fields.json.JSONField(verbose_name="Answer"),
                ),
                (
                    "is_valid",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        verbose_name="Is valid?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Answer",
                "verbose_name_plural": "Answers",
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "session_type",
                    models.CharField(
                        choices=[("exam", "exam"), ("test", "test")],
                        max_length=32,
                        verbose_name="Session type",
                    ),
                ),
                (
                    "finished_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Finished at"),
                ),
                (
                    "is_declined",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        verbose_name="Is declined?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Session",
                "verbose_name_plural": "Sessions",
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "external_id",
                    models.PositiveIntegerField(verbose_name="External ID"),
                ),
                (
                    "question",
                    drive.utils.fields.json.JSONField(verbose_name="Question"),
                ),
                (
                    "description",
                    drive.utils.fields.json.JSONField(
                        blank=True, null=True, verbose_name="Description"
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket",
                "verbose_name_plural": "Tickets",
            },
        ),
        migrations.CreateModel(
            name="TicketCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "category_id",
                    models.PositiveIntegerField(verbose_name="Category ID"),
                ),
                (
                    "name",
                    drive.utils.fields.json.JSONField(
                        max_length=128, unique=True, verbose_name="Name"
                    ),
                ),
                (
                    "description",
                    drive.utils.fields.json.JSONField(
                        blank=True, null=True, verbose_name="Description"
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="TicketImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "image",
                    models.ImageField(upload_to="ticket_images/", verbose_name="Image"),
                ),
                (
                    "file_id",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="File ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket Image",
                "verbose_name_plural": "Ticket Images",
            },
        ),
        migrations.CreateModel(
            name="TicketTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "topic_id",
                    models.PositiveIntegerField(verbose_name="Topic ID"),
                ),
                (
                    "name",
                    drive.utils.fields.json.JSONField(verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Ticket Topic",
                "verbose_name_plural": "Ticket Topics",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="TicketProblem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "user_message_id",
                    models.PositiveBigIntegerField(verbose_name="User message id"),
                ),
                (
                    "bot_message_id",
                    models.PositiveIntegerField(null=True, verbose_name="Bot message id"),
                ),
                ("text", models.TextField(verbose_name="Text")),
                (
                    "wants_answer",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        verbose_name="Wants answer?",
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        verbose_name="Resolved?",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="exam.ticket",
                        verbose_name="Ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bot.user",
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket problem",
                "verbose_name_plural": "Ticket problems",
            },
        ),
        migrations.CreateModel(
            name="TicketHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_valid",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        null=True,
                        verbose_name="Is valid?",
                    ),
                ),
                (
                    "bot_message_id",
                    models.BigIntegerField(blank=True, null=True, verbose_name="Bot Message ID"),
                ),
                (
                    "selected_answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="exam.answer",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="exam.session",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="exam.ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets_history",
                        to="bot.user",
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket history",
                "verbose_name_plural": "Tickets history",
            },
        ),
        migrations.AddField(
            model_name="ticket",
            name="categories",
            field=models.ManyToManyField(
                related_name="tickets",
                to="exam.ticketcategory",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="exam.ticketimage",
                verbose_name="Image",
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="topic",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="exam.tickettopic",
                verbose_name="Topic",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="exam.ticketcategory",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="invalid_solved_tickets",
            field=models.ManyToManyField(
                related_name="exams_with_invalid_solved",
                to="exam.ticket",
                verbose_name="Invalid solved tickets",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="tickets",
            field=models.ManyToManyField(
                related_name="sessions",
                to="exam.ticket",
                verbose_name="Tickets",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="bot.user",
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="valid_solved_tickets",
            field=models.ManyToManyField(
                related_name="exams_with_valid_solved",
                to="exam.ticket",
                verbose_name="Valid solved tickets",
            ),
        ),
        migrations.AddField(
            model_name="answer",
            name="ticket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="answers",
                to="exam.ticket",
                verbose_name="Question",
            ),
        ),
    ]
